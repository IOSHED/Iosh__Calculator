
name: Rust Release Workflow

on:
  push:
    tags:
      - 'v*'  # Запускается на создание нового тега, начинающегося с 'v'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Run fmt
        run: |
          cargo fmt -- --check

      - name: Run clippy
        run: |
          cargo clippy -- -D warnings

      - name: Build for target OS
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            cargo build --release --target=x86_64-unknown-linux-gnu
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cargo build --release --target=x86_64-pc-windows-gnu
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            cargo build --release --target=x86_64-apple-darwin
          fi

      - name: Package Release Files
        run: |
          mkdir -p "release/${{ matrix.os }}/configurate" "release/${{ matrix.os }}/configurat/docs"
          cp target/release/fro-calculator "release/${{ matrix.os }}/"
          cp target/release/fro-console "release/${{ matrix.os }}/"
          cp configurate/user.json "release/${{ matrix.os }}/configurate/"
          cp configurate/docs/README.ru.md "release/${{ matrix.os }}/configurate/docs/"

      - name: Create Release Tag
        id: create_tag
        run: |
          TAG_VERSION=$(git describe --tags --abbrev=0)
          NEW_TAG="v$(echo ${TAG_VERSION:1} + 1 | bc)"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag: ${{ steps.create_tag.outputs.new_tag }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

